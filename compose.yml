services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/nginx:/etc/nginx/conf.d
    depends_on:
      - db
      - test_db

  web:
    image: nginx:latest
    restart: on-failure
    volumes:
      - .:/var/www/html
      - ./docker/nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: laravel
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf

  test_db:
    image: mysql:8.0
    container_name: test_db
    restart: unless-stopped
    tty: true
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: laravel
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf

  postgresql:
    image: postgres
    container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    environment:
      - sonar.jdbc.url=jdbc:postgresql://postgresql:5433/sonar
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    expose:
      - 9000
    ports:
      - "127.0.0.1:8080:9000"
    depends_on:
      - postgresql

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data:
  dbdata:
